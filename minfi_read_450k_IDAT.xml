<tool id="read_450k_IDAT" name="Read 450K IDAT files" version="1.0">
    <description>Read in Illumina's 450k methylation arrays which are in IDAT format</description>
    <stdio>
        <exit_code range="1:" />
    </stdio>
    <requirements>
        <requirement type="R-module" version="1.15.7">minfi</requirement>
    </requirements>
    <command>
      cp "${minfi_get_files}" $__new_file_path__/minfi_config.txt;
        Rscript "${minfi_read_450k_script}"
    </command>
    <inputs>
        <param name="control" type="data_collection" format="idat" label="control" collection_type="list:paired"/>
        <param name="case" type="data_collection" format="idat" label="case" collection_type="list:paired"/>
    </inputs>
    <configfiles>
        <configfile name="minfi_get_files"><![CDATA[
### Parse the HDA's to get the path of each forward and reverse dataset
#for $key in $control.keys()
control $control[$key].forward  $control[$key].reverse $control[$key].name
#end for
#for $key in $case.keys()
case  $case[$key].forward $case[$key].reverse $case[$key].name
#end for
      ]]></configfile>
        <configfile name="minfi_read_450k_script"><![CDATA[
### Start time for code, approximate
timeStart <- as.character(Sys.time())
### code chunk number 2: Load all required libraries
library(minfi, quietly=TRUE, warn.conflicts=FALSE,verbose = FALSE)
### code chunk number 3: Update package version
if (packageVersion("minfi") < "1.15.6") {
  stop("Please update 'minfi' to version >= 1.15.7  to run this tool")
}

### Parse cheetah code and make dataframe for creating tmp dir
minfi_config_path = paste0("$__new_file_path__","/minfi_config.txt")
minfi_config = read.table(minfi_config_path)
colnames(minfi_config) = c("status","green","red","name")

### Make the tmpdir for symlinking data
base_dir = paste0("$__new_file_path__","/base")
system(paste0("mkdir ",base_dir))

### Make symlinks of files
for (i in 1:nrow(minfi_config)){
  stopifnot(nrow(minfi_config) == nrow(minfi_config["name"]))
  
  ### Make green idat file symlinks
  file_green = paste0(base_dir,"/",as.character(minfi_config[i,"name"]),"_Grn.idat")
  cmd_green = paste("ln -s",as.character(minfi_config[i,"green"]),file_green,sep=" ")
  print(" ")
  cat("Reading file ",i,"GREEN Channel ", file_green)
  system(cmd_green)
  
  ### Make red idat file symlinks
  file_red = paste0(base_dir,"/",as.character(minfi_config[i,"name"]),"_Red.idat")
  cmd_red = paste("ln -s",as.character(minfi_config[i,"red"]),file_red,sep=" ")
  print(" ")
  cat("Reading file ",i,"RED Channel ", file_red)
  system(cmd_red)
}

### Make dataframe with Basenames
Basename = paste0(base_dir,"/",unique(substr(list.files(base_dir),1,17)))
status = minfi_config[match(gsub(".+/","",Basename), minfi_config\$name),"status"]
targets = data.frame(Basename=Basename,status=status)

### Read 450k files
RGset = read.450k.exp(targets=targets,verbose=T)

cat("RGset for the IDAT files: ")

RGset

### Save file as RGset in the working directory
save(RGset, file="RGset.RData")
      ]]></configfile>
    </configfiles>
    <outputs>
        <data name="output" format="RData" label="RGset from input IDAT files" from_work_dir="RGset.RData"/>
    </outputs>
    <citations>
        <citation type="doi">10.1093/bioinformatics/btu049</citation>
    </citations>
    <help><![CDATA[
        Reads in Illumina 450K file which are in IDAT format. Each sample needs both the
        Red and Green channel IDAT files.

        Input: IDAT files (Both Red and Green channel). Make paired dataset collections, 
        with RED and GREEN channel IDAT files.
        
        1. Upload IDAT(Both Red and green channel) files using the upload tool in Galaxy.
        
        2. Once the upload is completed, select the "Operations on Multiple Datasets" in 
        the history panel. 
        
        3. Select the pairs of IDAT files to be analyzed, and click "For all selected".
        
        4. Choose the "Build List of Dataset pairs". Make the pairs and label the collections.
        
        5. Once the two dataset collections are prepared, run the tool to build the RGset.
        
        Output: RData file, which contains the RGset for IDAT files. 
              
        
    ]]>
    </help>
</tool>

